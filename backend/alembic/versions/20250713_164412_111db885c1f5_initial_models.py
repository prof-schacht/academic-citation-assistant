"""initial_models

Revision ID: 111db885c1f5
Revises: 
Create Date: 2025-07-13 16:44:12.257046

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision: str = '111db885c1f5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    op.create_table('papers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=1000), nullable=False),
    sa.Column('authors', sa.JSON(), nullable=True),
    sa.Column('abstract', sa.Text(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('journal', sa.String(length=500), nullable=True),
    sa.Column('doi', sa.String(length=200), nullable=True),
    sa.Column('arxiv_id', sa.String(length=100), nullable=True),
    sa.Column('pubmed_id', sa.String(length=100), nullable=True),
    sa.Column('semantic_scholar_id', sa.String(length=100), nullable=True),
    sa.Column('full_text', sa.Text(), nullable=True),
    sa.Column('embedding', Vector(384), nullable=True),
    sa.Column('citation_count', sa.Integer(), nullable=False),
    sa.Column('reference_count', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('source_url', sa.String(length=500), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_papers_arxiv_id'), 'papers', ['arxiv_id'], unique=True)
    op.create_index(op.f('ix_papers_doi'), 'papers', ['doi'], unique=True)
    op.create_index(op.f('ix_papers_pubmed_id'), 'papers', ['pubmed_id'], unique=True)
    op.create_index(op.f('ix_papers_semantic_scholar_id'), 'papers', ['semantic_scholar_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('affiliation', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('plain_text', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=False),
    sa.Column('citation_count', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('share_token', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_table('libraries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('share_token', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_table('citations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('paper_id', sa.UUID(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('relevance_explanation', sa.String(length=500), nullable=True),
    sa.Column('position', sa.JSON(), nullable=True),
    sa.Column('context_before', sa.String(length=500), nullable=True),
    sa.Column('context_after', sa.String(length=500), nullable=True),
    sa.Column('citation_style', sa.String(length=20), nullable=False),
    sa.Column('citation_text', sa.String(length=500), nullable=False),
    sa.Column('times_viewed', sa.Integer(), nullable=False),
    sa.Column('times_exported', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('library_papers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('library_id', sa.UUID(), nullable=False),
    sa.Column('paper_id', sa.UUID(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['library_id'], ['libraries.id'], ),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('library_papers')
    op.drop_table('citations')
    op.drop_table('libraries')
    op.drop_table('documents')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_papers_semantic_scholar_id'), table_name='papers')
    op.drop_index(op.f('ix_papers_pubmed_id'), table_name='papers')
    op.drop_index(op.f('ix_papers_doi'), table_name='papers')
    op.drop_index(op.f('ix_papers_arxiv_id'), table_name='papers')
    op.drop_table('papers')
    # ### end Alembic commands ###
