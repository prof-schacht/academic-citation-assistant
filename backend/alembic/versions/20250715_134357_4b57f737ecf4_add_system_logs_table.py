"""Add system logs table

Revision ID: 4b57f737ecf4
Revises: update_zotero_collections_format
Create Date: 2025-07-15 13:43:57.263510

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b57f737ecf4'
down_revision: Union[str, Sequence[str], None] = 'update_zotero_collections_format'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', name='loglevel'), nullable=False),
    sa.Column('category', sa.Enum('ZOTERO_SYNC', 'PDF_PROCESSING', 'SYSTEM', 'AUTH', 'API', 'DATABASE', 'SEARCH', name='logcategory'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('error_trace', sa.Text(), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_logs_category_created', 'system_logs', ['category', 'created_at'], unique=False)
    op.create_index('idx_logs_created_level', 'system_logs', ['created_at', 'level'], unique=False)
    op.create_index('idx_logs_user_created', 'system_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_system_logs_category'), 'system_logs', ['category'], unique=False)
    op.create_index(op.f('ix_system_logs_created_at'), 'system_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_logs_entity_id'), 'system_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_system_logs_entity_type'), 'system_logs', ['entity_type'], unique=False)
    op.create_index(op.f('ix_system_logs_level'), 'system_logs', ['level'], unique=False)
    op.create_index(op.f('ix_system_logs_user_id'), 'system_logs', ['user_id'], unique=False)
    op.drop_index(op.f('idx_papers_zotero_key'), table_name='papers')
    op.create_index(op.f('ix_papers_zotero_key'), 'papers', ['zotero_key'], unique=False)
    op.alter_column('zotero_config', 'auto_sync_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('zotero_config', 'sync_interval_minutes',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('zotero_config', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('zotero_config', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('zotero_sync', 'last_synced',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('zotero_sync', 'sync_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('zotero_sync', 'sync_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'synced'::character varying"),
               existing_nullable=False)
    op.alter_column('zotero_sync', 'last_synced',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('zotero_config', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('zotero_config', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('zotero_config', 'sync_interval_minutes',
               existing_type=sa.INTEGER(),
               server_default=sa.text('30'),
               existing_nullable=False)
    op.alter_column('zotero_config', 'auto_sync_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.drop_index(op.f('ix_papers_zotero_key'), table_name='papers')
    op.create_index(op.f('idx_papers_zotero_key'), 'papers', ['zotero_key'], unique=False)
    op.drop_index(op.f('ix_system_logs_user_id'), table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_level'), table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_entity_type'), table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_entity_id'), table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_created_at'), table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_category'), table_name='system_logs')
    op.drop_index('idx_logs_user_created', table_name='system_logs')
    op.drop_index('idx_logs_created_level', table_name='system_logs')
    op.drop_index('idx_logs_category_created', table_name='system_logs')
    op.drop_table('system_logs')
    # ### end Alembic commands ###
